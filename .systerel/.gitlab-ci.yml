# Continuous Integration configuration with gitlab.com
# See https://gitlab.com/help/ci/yaml/README.md


#########################################################
# Default CI pipeline configuration:
# - preset variables: 'S2OPC_NODE_MANAGEMENT = 1' set
# - jobs run in stages:
#   - gen: generation job
#   - build: build-linux64-ASan
#   - tests:
#     - test-check
#     - test-unit
#     - test-uactt
#
# CI pipeline manual run with 'ALL_TESTS = 1':
# - jobs run in stages:
#   - build: build-linux64-pys2opc # 'WITH_ASAN = 0' and 'WITH_PYS2OPC = 1'
#   - tests: # TEST_SERVER_XML_ADDRESS_SPACE, TEST_SERVER_XML_CONFIG and TEST_USERS_XML_CONFIG are NOT set to use static config
#     - test-unit-all-tests
#     - test-uactt-all-tests
#
# CI pipeline manual run with 'ALL_BUILDS = 1':
# - jobs run in stages:
#   - gen: generation job
#   - build: # 'WITH_STATIC_SECURITY_DATA: 1', 'WITH_CONST_ADDSPACE: 1' and 'PUBSUB_STATIC_CONFIG: 1'
#     - build-linux64-static-conf
#   - tests:
#     - test-unit
#   - build-others:
#     - build-win32
#     - build-win64
#     - build-zephyr
#     - build-pikeos
#   - test-others:
#     - test-zephyr
#     - test-pikeos
#
# CI pipeline manual run with 'CROSS_COMPILE = 1':
# - jobs run in stages:
#   - build-others:
#     - build-win32
#     - build-win64
#     - build-rpi
#     - build-zephyr
#     - build-freertos
#     - build-pikeos
#   - test-others:
#     - test-zephyr
#     - test-pikeos
#
# CI pipeline manual run with 'HIL_TESTS = 1':
# - jobs run in stages:
#   - hil:
# Â    - hil-tests
#
#########################################################

# Ensures job failure when intermediate script line fails
# (see gitlab issues #25394 and #383355)
variables:
  FF_ENABLE_BASH_EXIT_CODE_CHECK: "true"
  
.nominal_build_variables: &nominal_build_variables
  S2OPC_NODE_MANAGEMENT: 1
  S2OPC_EVENT_MANAGEMENT: 1

.nominal_test_variables: &nominal_test_variables
  S2OPC_NODE_MANAGEMENT: 1
  S2OPC_EVENT_MANAGEMENT: 1
  TEST_SERVER_XML_ADDRESS_SPACE: S2OPC_Test_NodeSet.xml
  TEST_SERVER_XML_CONFIG: S2OPC_Server_UACTT_Config.xml
  TEST_USERS_XML_CONFIG: S2OPC_UACTT_Users.xml
  TEST_CLIENT_XML_CONFIG: S2OPC_Client_Test_Config.xml
  TEST_PASSWORD_PRIVATE_KEY : password
  TEST_PASSWORD_CACERT : S2OPC
  TEST_PASSWORD_USER_ME : 1234
  TEST_PASSWORD_USER_SECUADMIN : 1234
  TEST_USERNAME : user1
  TEST_PASSWORD_USER : password

# Variables for ALL_BUILDS and ALL_TESTS manual pipelines

.all-tests_build_variables: &all-tests_build_variables
  WITH_PYS2OPC: 1

.all-builds_build_variables: &all-builds_build_variables
  S2OPC_EVENT_MANAGEMENT: 1
  WITH_STATIC_SECURITY_DATA: 1
  WITH_CONST_ADDSPACE: 1
  PUBSUB_STATIC_CONFIG: 1

stages:
  - gen
  - hil-build
  - hil-test
  - build
  - test
  - build-others
  - test-others
  - analyses
  - doc

# Avoid to run 2 pipelines in case of MR
# (1 for branch and 1 for MR)
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

.pikeos-job: &pikeos_job
  tags:
    - pikeos

###
# Generation jobs
###

generation:
  stage: gen
  image: com.systerel.fr:5000/c838/gen-ext@sha256:66cadeb219f3904e78ade14ef85e57aa0309eff4416e9625b0fd4bea8e976cd7 # digest of gen-ext:1.4
  script:
    - ./clean.sh gen
    - ./.validates_xml_schemas.sh
    - ./.pre-build-ext.sh
    - rm ./src/ClientServer/services/bgenc/constants_bs.h_
    - ./.check_generated_code.sh
  artifacts:
    name: 'bgenc-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - 'pre-build.log'
    when: always
    expire_in: '1 week'
  rules:
    - if: "$HIL_TESTS != null"
      when: never
    - if: "$NO_GEN == null && \
           $WINDOWS_TEST == null && \
           $CROSS_COMPILE == null && \
           $WITH_COVERITY == null && \
           $S2OPC_PUBSUB_ONLY == null &&\
           $ALL_BUILDS == null && \
           $ALL_TESTS == null && \
           $WITH_DOC == null && \
           $SCAN_SBOM == null && \
           $TEST_NETWORK_FUZZ == null"
      when: on_success

###
# hil jobs
###

hil-build-zephyr:
  stage: hil-build
  needs: []
  image: # digest of zephyr_build :v3.7.0-d
    name: docker.aix.systerel.fr/c838/zephyr_build:v3.7.0-d
    entrypoint: ['']
  script:
    - ln -s $(pwd) /zephyrproject/modules/lib/s2opc
    - cd .systerel/HIL_tests
    - ./build.py --os zephyr
  artifacts:
    name: 'bin-zephyr-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - 'build_zephyr/'
    expire_in: '1 week'
    when: always
  rules:
    - if: "$HIL_TESTS != null"
      when: always

hil-test:
  stage: hil-test
  needs: [hil-build-zephyr]
  tags:
      - hil
  script:
    - cd .systerel/HIL_tests
    - ./flash_all.py
  artifacts:
    name: 'bin-zephyr-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - 'log/'
    expire_in: '1 week'
    when: always
  rules:
    - if: "$HIL_TESTS != null"
      when: always


###
# Compilation jobs
###

.build-linux: &build_linux
  stage: build
  image: docker.aix.systerel.fr/c838/build@sha256:8cbb2881dc3798ce6b6cf078fa744ef357b30509a5c3e12e2e59cf8bed9c521f # digest of build:1.51
  script:
    - &build_command_line './build.sh && cd $BUILD_DIR || exit 1'
  variables: &build_linux_variables
    DOCKER_DIGEST: 'sha256:8cbb2881dc3798ce6b6cf078fa744ef357b30509a5c3e12e2e59cf8bed9c521f'
    BUILD_DIR: build
  artifacts:
    name: 'bin-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - '*.log'
      - 'build/'  # Required by tests / coverage
    expire_in: '1 week'
    when: always
# Common rules overwritten by each job using this template
#  rules: # note: should be repeated in each child job of *build_linux
#    - if: "$WINDOWS_TEST == null && $CROSS_COMPILE == null && $WITH_COVERITY == null && $WITH_DOC == null"
#      when: on_success

# Used by "normal" pipeline
build-linux64-ASan:
  <<: *build_linux
  variables:
    <<: [*build_linux_variables,*nominal_build_variables]
    WITH_ASAN: 1
    WITH_UBSAN: 1
    BUILD_SHARED_LIBS: 'true' # build shared version to limit binaries size
  needs: []
  rules: # 1st line repeat .build-linux + added rules to avoid ASAN build
    - if: "$HIL_TESTS != null"
      when: never
    - if: "$WINDOWS_TEST == null && $CROSS_COMPILE == null && \
           $WITH_COVERITY == null && $WITH_COVERAGE == null && $WITH_DOC == null && \
           $NO_ASAN == null && $ALL_TESTS == null && $ALL_BUILDS == null && \
           $HIL_TESTS == null && $SCAN_SBOM == null && \
           $TEST_NETWORK_FUZZ == null" # avoid ASAN build in most of nightly builds
      when: on_success

build-linux-faulty-packet:
  <<: *build_linux
  stage : build-others
  variables:
    <<: [*build_linux_variables,*nominal_build_variables]
    WITH_ASAN: 1
    WITH_UBSAN: 1
    BUILD_DIR: build_faulty
    CMAKE_C_FLAGS: "-DSOPC_MAX_SESSIONS=50 -DSOPC_MAX_SECURE_CONNECTIONS=51"
  needs : []
  artifacts:
    name: 'bin-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}_faulty'
    paths:
      - '*.log'
      - 'build_faulty/bin/toolkit_test_server'
      - 'build_faulty/bin/*.xml'
      - 'build_faulty/bin/S2OPC_Demo_PKI'
      - 'build_faulty/bin/S2OPC_Users_PKI'
      - 'build_faulty/bin/server_public'
      - 'build_faulty/bin/server_private'
      - 'build_faulty/bin/user_public'
    expire_in: '1 week'
  rules :
    - if: "$ALL_BUILDS != null"
      when : on_success

# Used by all-tests pipeline (add tests which needs NO_ASAN)
build-linux64-pys2opc:
  <<: *build_linux
  variables:
    <<: [*build_linux_variables,*all-tests_build_variables] # add pys2opc
  needs: []
  rules: # do not repeat .build-linux: due to disjunction + need only those 2 conditions
    - if: "$ALL_TESTS != null || $WITH_COVERAGE == null && $NO_ASAN != null" # if ASAN is deactivated build PyS2OPC by default (except for coverage)
      when: on_success

# Used when ALL_BUILDS set (tests use static configuration)
build-linux64-static-conf:
  <<: *build_linux
  variables:
    <<: [*build_linux_variables,*all-builds_build_variables] # add static conf
  needs: []
  rules: # single case rule of ALL_BUILDS
    - if: "$ALL_BUILDS != null"
      when: on_success

build-linux64-NoASan-NoPyS2OPC:
  <<: *build_linux
  variables:
    <<: [*build_linux_variables,*nominal_build_variables]
  needs: []
  rules: # In case of coverage analysis or when nano scope is used (TODO: PyS2OPC shall be built but tests will fail: use another server with subscription in tests)
    - if: "$WITH_COVERAGE != null"
      when: on_success

build-win64: &build_win64
  stage: build-others
  image: docker.aix.systerel.fr/c838/mingw_build@sha256:d158e52c51d2f97d4bd13bcc93ebbe5793025c0032dd7e6116bdf9293fc790bf # digest of mingw_build:1.15
  needs: []
  script:
    # Manually disable PyS2OPC for windows cross builds. When set in "variables:", the value is overwritten.
    - 'export WITH_PYS2OPC=OFF'
    - *build_command_line
  variables: &build_win64_variables
    CMAKE_TOOLCHAIN_FILE: 'toolchain-mingw32-w64_x86_64.cmake'
    DOCKER_DIGEST: 'sha256:d158e52c51d2f97d4bd13bcc93ebbe5793025c0032dd7e6116bdf9293fc790bf'
    BUILD_DIR: build_toolchain
    S2OPC_CLIENTSERVER_ONLY: 1 # PubSub is not compatible with windows platform
    WARNINGS_AS_ERRORS: 0 # Some format warnings remain on MinGW
  artifacts:
    name: 'bin-w64-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - '$BUILD_DIR/bin'
    expire_in: '1 week'
  rules:
   - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
     when: always # run even if previous job in pipeline failed

build-win32:
  <<: *build_win64
  variables:
    <<: *build_win64_variables
    CMAKE_TOOLCHAIN_FILE: 'toolchain-mingw32-w64.cmake'
  artifacts:
    name: 'bin-w32-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - '$BUILD_DIR/bin/'
    expire_in: '1 week'
  rules:
   - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
     when: always # run even if previous job in pipeline failed

build-rpi:
  stage: build-others
  image: docker.aix.systerel.fr/c838/rpi-build@sha256:070b1ca58667ee5908902ba3eb03e5fa05993d3a86d2c8ddeb6f7f41ed62609c # digest of rpi-build:1.9
  needs: []
  script:
    - '. /usr/local/cross_venv/bin/activate'
    - *build_command_line
  variables:
    CMAKE_TOOLCHAIN_FILE: '/toolchain-rpi.cmake'
    DOCKER_DIGEST: 'sha256:070b1ca58667ee5908902ba3eb03e5fa05993d3a86d2c8ddeb6f7f41ed62609c'
    BUILD_DIR: build_toolchain
    # Note: building of PyS2OPC C generated file fails due to "conditional branch out of range" if not compiled with O0.
    # In order to have S2OPC built with optimisations, it is also possible to build PyS2OPC alone in a second step.
    CMAKE_BUILD_TYPE: Debug
    WITH_PYS2OPC: 1
    # Note: it might be renamed to "...-linux_armv7l.whl" if needed for installation
    PYS2OPC_WHEEL_NAME: 'pys2opc-1.6.0-cp39-cp39-linux_arm.whl'
  artifacts:
    name: 'bin-rpi-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - '$BUILD_DIR/bin'
      - '$BUILD_DIR/lib'
      - '*.log'
    expire_in: '1 week'
  rules:
   - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
     when: always # run even if previous job in pipeline failed

build-zephyr:
  stage: build-others
  image: # digest of zephyr_build :v3.7.0-c
    name: docker.aix.systerel.fr/c838/zephyr_build:v3.7.0-d
    entrypoint: [''] # Needs cause of issue with `sh` https://gitlab.com/gitlab-org/gitlab-runner/-/issues/3622
  needs: []
  script:
    - 'ln -s $(pwd) /zephyrproject/modules/lib/s2opc'
    - 'samples/embedded/platform_dep/zephyr/ci/build-zephyr-samples-docker.sh stm32h735g_disco cli_client'
    - 'samples/embedded/platform_dep/zephyr/ci/build-zephyr-samples-docker.sh nucleo_h745zi_q/stm32h745xx/m7 cli_client -DCONFIG_NET_GPTP=y'
    - 'samples/embedded/platform_dep/zephyr/ci/build-zephyr-samples-docker.sh mimxrt1064_evk cli_pubsub_server'
    - 'samples/embedded/platform_dep/zephyr/ci/build-zephyr-samples-docker.sh stm32h747i_disco/stm32h747xx/m7 cli_pubsub_server --nocrypto'
    - 'samples/embedded/platform_dep/zephyr/ci/build-zephyr-samples-docker.sh stm32h747i_disco/stm32h747xx/m7 cli_pubsub_server'
    - './samples/embedded/platform_dep/zephyr/ci/build-zephyr-samples-docker.sh native_sim cli_client'
    - './samples/embedded/platform_dep/zephyr/ci/build-zephyr-samples-docker.sh native_sim cli_pubsub_server'
  artifacts:
    name: 'bin-zephyr-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - 'build_zephyr/'
    expire_in: '1 week'
  rules:
    - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
      when: always

build-freertos:
  stage: build-others
  image: docker.aix.systerel.fr/c838/freertos_build@sha256:09addc3a3bfcd46ff5581ab21229330fb4cc506c331cf7a31b0a58a0d886de0d # freertos_build:v1.1
  needs: []
  script:
    - 'samples/embedded/platform_dep/freertos/ci/build-freertos-samples-docker.sh'
    - 'test -f build_freertos/freertos-sopc.elf'
    - 'mv build_freertos/freertos-sopc.elf build_freertos/freertos-sopc-stm32h723zg.elf'
    - 'rm -rf /tmp/ws_freertos/build'
    - 'samples/embedded/platform_dep/freertos/ci/build-freertos-samples-docker.sh -- --nocrypto'
    - 'test -f build_freertos/freertos-sopc.elf'
    - 'mv build_freertos/freertos-sopc.elf build_freertos/freertos-sopc-stm32h723zg-nocrypto.elf'
  artifacts:
    name: 'bin-freertos-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - 'build_freertos/'
    when: always
    expire_in: '1 week'
  rules:
    - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
      when: always

build-pikeos:
  <<: *pikeos_job
  stage: build-others
  image: docker.aix.systerel.fr/c838/pikeos@sha256:3d5dcbab75b0c98a8d27d1cfa239bfa43b5b87bc1bbaca2a7c8a5bfe2adc5aeb # pikeos:1.2.1
  needs: []
  variables:
    # default value to change when PikeOS licence is back
    BUILD_PIKEOS_OPTIONS : '--no-tests --no-samples'
  script:
    - 'samples/embedded/platform_dep/pikeos/ci/build-pikeos-samples-docker.sh $BUILD_PIKEOS_OPTIONS'
  artifacts:
    name: 'bin-pikeos-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - 'build_pikeos/'
    when: always
    expire_in: '1 week'
  rules:
    - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
      when: always

build-fuzz:
  <<: *build_linux
  stage: build-others
  needs: []
  variables:
    <<: [*build_linux_variables,*nominal_build_variables]
    BUILD_DIR: build_fuzz
    CMAKE_C_FLAGS: "-DSOPC_MAX_SOCKETS=1500 -DSOPC_MAX_SOCKETS_CONNECTIONS=1500 -DSOPC_MAX_SECURE_CONNECTIONS=1100 -DSOPC_MAX_SESSIONS=1000 -DSOPC_MAX_TIMERS=UINT16_MAX"
  artifacts:
    name: 'bin_${CI_COMMIT_SHA}_job${CI_JOB_ID}_fuzz'
    paths:
      - "*.log"
      - "build_fuzz/bin"
      - "tests/ClientServer/scripts/*"
    expire_in: "30 days"
  timeout: 24 hours
  tags:
    - fuzzing
  rules:
    - if: "$TEST_NETWORK_FUZZ != null"
      when: always

###
# Test jobs
###

test-build-from-export:
  <<: *build_linux
  stage: test
  needs: [build-linux64-ASan]
  script:
    - 'mkdir -p -p ${CI_PROJECT_DIR}/samples/ClientServer/write_from_export/build'
    - 'cp ${CI_PROJECT_DIR}/samples/ClientServer/CMakeLists.example.txt ${CI_PROJECT_DIR}/samples/ClientServer/write_from_export/CMakeLists.txt'
    - 'cd ${CI_PROJECT_DIR}/samples/ClientServer/write_from_export/build'
    - 's2opc_DIR=${CI_PROJECT_DIR}/build cmake ..'
    - 'cmake --build .'
    - 'mkdir -p ${CI_PROJECT_DIR}/samples/ClientServer/build_samples'
    - 'cd ${CI_PROJECT_DIR}/samples/ClientServer/build_samples'
    - 's2opc_DIR=${CI_PROJECT_DIR}/build cmake ..'
    - 'cmake --build .'
    - 'mkdir -p ${CI_PROJECT_DIR}/samples/PubSub/build_samples'
    - 'cd ${CI_PROJECT_DIR}/samples/PubSub/build_samples'
    - 's2opc_DIR=${CI_PROJECT_DIR}/build cmake ..'
    - 'cmake --build .'
    - 'mkdir -p ${CI_PROJECT_DIR}/samples/PubSub_ClientServer/build_samples'
    - 'cd ${CI_PROJECT_DIR}/samples/PubSub_ClientServer/build_samples'
    - 's2opc_DIR=${CI_PROJECT_DIR}/build cmake ..'
    - 'cmake --build .'
    - 'mkdir -p ${CI_PROJECT_DIR}/samples/embedded/build_samples'
    - 'cd ${CI_PROJECT_DIR}/samples/embedded/build_samples'
    - 's2opc_DIR=${CI_PROJECT_DIR}/build cmake ..'
    - 'cmake --build .'
  artifacts:
  rules:
    - if: "$NO_TESTS == null && $WINDOWS_TEST == null && $CROSS_COMPILE == null && \
           $WITH_COVERITY == null && $WITH_COVERAGE == null && $WITH_DOC == null && \
           $S2OPC_PUBSUB_ONLY == null && $S2OPC_CLIENTSERVER_ONLY == null && \
           $ALL_BUILDS == null && $ALL_TESTS == null && $HIL_TESTS == null && \
           $SCAN_SBOM == null && $TEST_NETWORK_FUZZ == null"
      when: on_success

.test-linux: &test_linux
  stage: test
# Common rules overwritten by each job using this template
#  rules: # note to be repeated by each child job of *test_linux
#    - if: "$NO_TESTS == null && $WINDOWS_TEST == null && $CROSS_COMPILE == null && \
#           $WITH_COVERITY == null && $WITH_COVERAGE == null"
#      when: on_success

# Test check belongs to the test part, however it does not depend on linux build.
test-check:
  <<: *test_linux
  image: docker.aix.systerel.fr/c838/check@sha256:8be8c50cd484989c987b6c28ded2e03f30e81ec27bb53e41cecde8cdc3bb86c8 # digest of check:1.22
  needs: []
  script:
    - ./.check-code.sh
    # Check generated types are up to date
    - './scripts/gen-sopc-types.py ./schemas/Opc.Ua.Types.bsd'
    - './scripts/generate-embedded-base-type-info.py ./schemas/Opc.Ua.NodeSet2.xml src/Common/opcua_types/sopc_embedded_nodeset2.h'
    # Check test types are up to date
    - './scripts/gen-sopc-types.py --types_prefix Custom --ns_index 1 ./tests/ClientServer/data/types/customTypes.bsd --files_path ./tests/ClientServer/unit_tests/helpers/'
    - './scripts/gen-sopc-types.py --types_prefix Custom2 --ns_index 2 ./tests/ClientServer/data/types/level2Types.bsd --files_path ./tests/ClientServer/unit_tests/helpers/ --imported_ns_prefixes Custom'
    - './.format.sh'
    # Check that generated files are up to date
    - '${CI_PROJECT_DIR}/scripts/generate-s2opc-address-space.py ${CI_PROJECT_DIR}/samples/embedded/cli_pubsub_server/xml/s2opc_pubsub_embedded_nodeset.xml ${CI_PROJECT_DIR}/samples/embedded/cli_pubsub_server/src/test_address_space.c --const_addspace'
    - '${CI_PROJECT_DIR}/scripts/generate-s2opc_pubsub-static-config.py ${CI_PROJECT_DIR}/tests/embedded/validation_test/config_pubsub.xml ${CI_PROJECT_DIR}/tests/embedded/validation_test/pubsub_config_static.c'
    - '${CI_PROJECT_DIR}/scripts/generate-s2opc-address-space.py ${CI_PROJECT_DIR}/tests/embedded/validation_test/xml/s2opc_pubsub_embedded_nodeset.xml ${CI_PROJECT_DIR}/tests/embedded/validation_test/embedded_address_space.c --const_addspace'
    - './.format.sh'
    - './.verify-no-git-changes.sh'
    # Check generated demo nodesets are up to date
    - 'cd samples/ClientServer/data/address_space && ./generate_demo_nodesets.sh && cd -'
    - './.verify-no-git-changes.sh'
    - 'cd samples/PubSub_ClientServer/data/address_space && ./generate_demo_nodesets.sh && cd -'
    - './.format.sh'
    - './.verify-no-git-changes.sh'
  variables:
      DOCKER_DIGEST: 'sha256:8be8c50cd484989c987b6c28ded2e03f30e81ec27bb53e41cecde8cdc3bb86c8'
  artifacts:
    name: 'test-check-results-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - 'pre-build-check.log'
      - 'clang_tidy.log'
      - 'build-analyzer/analyzer-report'
    when: on_failure
    expire_in: '1 week'
  rules: # repeat .test-linux variables exception since overwritten here
    - if: "$NO_TESTS == null && $WINDOWS_TEST == null && $CROSS_COMPILE == null && \
           $WITH_COVERITY == null && $WITH_COVERAGE == null && $WITH_DOC == null && \
           $ALL_TESTS == null && $ALL_BUILDS == null && $HIL_TESTS == null && $SCAN_SBOM == null && \
           $TEST_NETWORK_FUZZ == null"
      when: on_success

.test-unit: &test_unit
  <<: *test_linux
  image: docker.aix.systerel.fr/c838/test@sha256:8fbec254f6b8c8467b780d407c6f3c2e87d87899e141b8b2c9013ba30b4f0c8d # digest of test:2.16
  script:
    - './.set-bin-root.sh'
    - './test-all.sh'
  artifacts:
    name: 'test-unit-results-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - 'build/bin/**/*.tap'
      - 'build/bin/**/*.log'
      - 'build/tests/**/Testing'
      - 'build/samples/**/Testing'
      - 'build/**/*.*.gcda' # coverage analysis
      - 'build/**/*.*.gcno' # coverage analysis
    when: always
    expire_in: '1 week'
# Common rules defined by test-unit job below

# Test unit for ALL_TESTS variable (add dynamic configuration)
test-unit-all-tests:
  <<: *test_unit
  needs: [build-linux64-pys2opc]
  variables:
    TEST_PASSWORD_PRIVATE_KEY : password
    TEST_PASSWORD_CACERT : S2OPC
    TEST_PASSWORD_USER_ME : 1234
    TEST_PASSWORD_USER_SECUADMIN : 1234
    TEST_USERNAME : user1
    TEST_PASSWORD_USER : password
  rules:
    - if: "$ALL_TESTS != null"
      when: on_success

# Test unit for NOT ALL_TESTS variable
test-unit:
  <<: *test_unit
  variables:
    <<: *nominal_test_variables
  rules: # repeat .test-linux variables exception since overwritten here
    - if: "$NO_TESTS == null && $WINDOWS_TEST == null && $CROSS_COMPILE == null && \
           $WITH_COVERITY == null && $WITH_DOC == null && \
           $ALL_TESTS == null && $HIL_TESTS == null && $SCAN_SBOM == null && \
           $TEST_NETWORK_FUZZ == null" # + excludes ALL_TESTS
      when: on_success

.test-uactt: &test_uactt
  <<: *test_linux
  image: com.systerel.fr:5000/c838/uactt-linux@sha256:e9118a5aa597d4e7f2bcf1f53817f120182ef3633103b9e6cf128c3945f46ca2 # uactt-linux:1.6
  script:
    - ulimit -n 1024
    - 'cd tests/ClientServer/acceptance_tools/ && ./launch_acceptance_tests.sh'
  rules:
    - if: "$HIL_TESTS == null"
      when: always
  artifacts:
    name: 'uactt-logs-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - 'build/bin/**/*.tap'
      - 'build/bin/**/*.log'
      - 'tests/ClientServer/acceptance_tools/*.log'
      - '**/*.*.gcda' # coverage analysis
      - '**/*.*.gcno' # coverage analysis
    when: always
    expire_in: '1 week'

# Test uactt for ALL_TESTS variable (add dynamic configuration)
test-uactt-all-tests:
  <<: *test_uactt
  variables:
    LINUX_UACTT: 1
    TEST_PASSWORD_PRIVATE_KEY : password
  rules:
    - if: "$ALL_TESTS != null && \
           $S2OPC_PUBSUB_ONLY == null && \
           $ALL_BUILDS == null" # + no UACTT tests on PubSub + excludes ALL_BUILDS

# Test uactt for NOT ALL_TESTS variable
test-uactt:
  <<: *test_uactt
  variables:
    <<: *nominal_test_variables
    LINUX_UACTT: 1
  rules:
    - if: "$NO_TESTS != null || $WINDOWS_TEST != null || $CROSS_COMPILE != null || \
           $WITH_COVERITY != null || $WITH_COVERAGE != null || $WITH_DOC != null || \
           $S2OPC_PUBSUB_ONLY != null || $ALL_BUILDS != null || $ALL_TESTS != null"
      when: never
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_BRANCH == 'master' || $CI_COMMIT_TAG"
      when: on_success

test-faulty-packets :
  stage: test-others
  image: docker.aix.systerel.fr/c838/test@sha256:8fbec254f6b8c8467b780d407c6f3c2e87d87899e141b8b2c9013ba30b4f0c8d # digest of test:2.16
  needs : [build-linux-faulty-packet]
  script:
    - ./tests/ClientServer/scripts/faulty_packet_tester_launcher.sh build_faulty/bin/toolkit_test_server
  artifacts:
    name: 'bin-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}_test_faulty'
    paths:
      - 'build_faulty/bin/**/*.log'
      - '/tmp/browse_packets.txt'
      - 'tests/ClientServer/scripts/*.tap'
    when: on_failure
    expire_in: "1 week"
  rules :
    - if: "$ALL_BUILDS != null"
      when: on_success

test-fuzz:
  stage: test-others
  image: docker.aix.systerel.fr/c838/opcua-network-fuzzer@sha256:35e40ba847bdfe5f3e7112f465adb2c70d1f0694521f6ba8d018c55f651ef205 #digest version 3.3
  needs: [build-fuzz]
  script:
    - ./.network_fuzzing.sh build_fuzz/bin
  artifacts:
    name: 'fuzzing_results_job${CI_JOB_ID}'
    paths:
      - "./boofuzz-results"
      - "./build_fuzz/bin/toolkit_demo_server_logs"
    when: on_failure
    expire_in: "30 days"
  timeout: 24 hours
  tags:
    - fuzzing
  rules:
    - if: "$TEST_NETWORK_FUZZ != null"
      when: on_success
  dependencies:
    - build-fuzz

# Generate the Software Bill Of Materials according to the conan.lock file.
generate_sbom:
  stage: test
  image: registry.gitlab.com/systerel/s2opc/cyberwatch@sha256:df8486140065bb3ea2d7394283ef1adfd403d341edc9ffe28582721ceb199499 #registry.gitlab.com/systerel/s2opc/cyberwatch:2.0
  needs: []
  script:
    - conan remote add gitlab ${CI_API_V4_URL}/projects/$CI_PROJECT_ID/packages/conan False
    - conan user ci_user -r gitlab -p ${CI_JOB_TOKEN}
    - conan lock create conanfile.py 
    - if [ ! -e sbom.json ]; then touch sbom.json; fi
    - trivy fs --format cyclonedx --output sbom.json --insecure .
  artifacts:
    when: on_success
    expire_in: "1 week"
    paths:
      - "sbom.json"
      - conan.lock
  rules:
    - changes:
        compare_to: master
        paths:
          - conanfile.py
    - if: "$SCAN_SBOM != null"

# Look for vulnerabilities in the dependencies of the SBOM generated in the generate_sbom job.
scan_sbom:
  stage: test
  image: registry.gitlab.com/systerel/s2opc/cyberwatch@sha256:df8486140065bb3ea2d7394283ef1adfd403d341edc9ffe28582721ceb199499 #registry.gitlab.com/systerel/s2opc/cyberwatch:2.0
  needs:
    - job: generate_sbom
  script:
    - trivy sbom sbom.json --severity HIGH,CRITICAL --exit-code 1 --insecure --output vulnerabilities_table.txt
  artifacts:
    when: on_failure
    expire_in: "1 month"
    paths:
      - "vulnerabilities_table.txt"
  rules:
    - changes:
        compare_to: master
        paths:
          - conanfile.py
    - if: "$SCAN_SBOM != null"

#Look for exposed secrets as well as vulnerabilities in the dependencies.
scan_repository:
  stage: test
  image: docker.aix.systerel.fr/c838/cyberwatch@sha256:5cedde187768011d0bc096116d453415c8b4a9f1079bd99dbc28ae2e16dabe4c
  script:
    - trivy --insecure repo .
  rules:
    - if: "$SCAN_SBOM != null"

###
# Test others jobs
###
test-zephyr:
  stage: test-others
  image: docker.aix.systerel.fr/c838/zephyr_build:v3.7.0-d # digest of test:2.16
  needs : [build-zephyr]
  script:
    - "./samples/embedded/platform_dep/zephyr/ci/test-in-docker.sh"
  variables:
    <<: *nominal_test_variables
  rules: # run the task only if Zephyr samples have been compiled
    - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
      when: on_success

test-pikeos:
  <<: *pikeos_job
  stage: test-others
  image: docker.aix.systerel.fr/c838/pikeos:1.2.1@sha256:3d5dcbab75b0c98a8d27d1cfa239bfa43b5b87bc1bbaca2a7c8a5bfe2adc5aeb # pikeos:1.2.1
  needs : [build-pikeos]
  script:
    - samples/embedded/platform_dep/pikeos/ci/test-embedded-docker.sh
  variables:
    <<: *nominal_test_variables
  artifacts:
    name: 'test-pikeos-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - build_pikeos/
    expire_in: '1 week'
    when: on_failure
  rules:
    - if: "$PIKEOS_TEST == null"
      when: never
    - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
      when: on_success

###
# Analysis jobs
###

coverage-analysis:
  stage: analyses
  image: docker.aix.systerel.fr/c838/test@sha256:8fbec254f6b8c8467b780d407c6f3c2e87d87899e141b8b2c9013ba30b4f0c8d # digest of test:2.16
  script:
    - ./.gen_coverage.sh
  artifacts:
    name: 'coverage-report-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - 'report'
    expire_in: '1 week'
  rules:
    - if: "$WITH_COVERAGE != null"

###
# Documentation generation and publication
###

# The job name must be "pages", and the html must be in "public/" and put in an artifact.
pages:
  <<: *build_linux
  stage: doc
  dependencies: []
  rules:
    - if: "$WITH_DOC != null"
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master'"
  variables:
    <<: *build_linux_variables
  script:
    - mkdir $BUILD_DIR
    - cd $BUILD_DIR
    # PyS2OPC relies on subscriptions
    - cmake -DS2OPC_NODE_MANAGEMENT=yes -DS2OPC_EVENT_MANAGEMENT=yes -DWITH_PYS2OPC=yes ..
    - cmake --build . --target doc
    - mv apidoc/html ../public/
  artifacts:
    paths:
    - public
    expire_in: 30 days

check_doc:
  <<: *build_linux
  stage: doc
  script:
    - cd $BUILD_DIR
    - cmake --build . --target doc &> doc.log
    - test $(grep -c 'warning:' doc.log) -eq 0
  variables:
    <<: *build_linux_variables
  artifacts:
    name: 'check_doc-results-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}_job${CI_JOB_ID}'
    paths:
      - '$BUILD_DIR/doc.log'
    expire_in: '1 week'
    when: on_failure
  rules:
   - if: "$ALL_BUILDS != null || $ALL_TESTS != null || $CI_PIPELINE_SOURCE == 'merge_request_event'"
     when: on_success

