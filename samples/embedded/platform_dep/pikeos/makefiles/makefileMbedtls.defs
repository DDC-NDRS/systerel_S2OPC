# Licensed to Systerel under one or more contributor license
# agreements. See the NOTICE file distributed with this work
# for additional information regarding copyright ownership.
# Systerel licenses this file to you under the Apache
# License, Version 2.0 (the "License"); you may not use this
# file except in compliance with the License. You may obtain
# a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Proper to MbedTLS library

# MbedTLS paths
MBEDTLS_LIB_DIR = ${MBEDTLS_PRJ_DIR}/library

# MbedTLS C source files
MBEDTLS_OBJS_CRYPTO= \
		 psa_crypto \
	     psa_crypto_aead \
	     psa_crypto_cipher \
	     psa_crypto_client \
	     psa_crypto_driver_wrappers_no_static \
	     psa_crypto_ecp \
	     psa_crypto_ffdh \
	     psa_crypto_hash \
	     psa_crypto_mac \
	     psa_crypto_pake \
	     psa_crypto_rsa \
	     psa_crypto_se \
	     psa_crypto_slot_management \
	     psa_crypto_storage \
	     psa_its_file \
	     psa_util \
	     aes \
	     aesni \
	     aesce \
	     aria \
	     asn1parse \
	     asn1write \
	     base64 \
	     bignum \
	     bignum_core \
	     bignum_mod \
	     bignum_mod_raw \
	     block_cipher \
	     camellia \
	     ccm \
	     chacha20 \
	     chachapoly \
	     cipher \
	     cipher_wrap \
	     cmac \
	     constant_time \
	     ctr_drbg \
	     des \
	     dhm \
	     ecdh \
	     ecdsa \
	     ecjpake \
	     ecp \
	     ecp_curves \
	     ecp_curves_new \
	     entropy \
	     entropy_poll \
	     error \
	     gcm \
	     hkdf \
	     hmac_drbg \
	     lmots \
	     lms \
	     md \
	     md5 \
	     memory_buffer_alloc \
	     nist_kw \
	     oid \
	     pem \
	     pk \
	     pk_ecc \
	     pk_wrap \
	     pkcs12 \
	     pkcs5 \
	     pkparse \
	     pkwrite \
	     platform \
	     platform_util \
	     poly1305 \
	     ripemd160 \
	     rsa \
	     rsa_alt_helpers \
	     sha1 \
	     sha256 \
	     sha512 \
	     sha3 \
	     threading \
	     timing \
	     version \
	     version_features \

MBEDTLS_OBJS_X509= \
	   x509 \
	   x509_create \
	   x509_crl \
	   x509_crt \
	   x509_csr \
	   x509write \
	   x509write_crt \
	   x509write_csr \
	   pkcs7 \

MBEDTLS_OBJS_TLS= \
	  debug \
	  mps_reader \
	  mps_trace \
	  net_sockets \
	  ssl_cache \
	  ssl_ciphersuites \
	  ssl_client \
	  ssl_cookie \
	  ssl_debug_helpers_generated \
	  ssl_msg \
	  ssl_ticket \
	  ssl_tls \
	  ssl_tls12_client \
	  ssl_tls12_server \
	  ssl_tls13_keys \
	  ssl_tls13_client \
	  ssl_tls13_server \
	  ssl_tls13_generic \

MBEDTLS_MODLIST += $(addprefix ${MBEDTLS_LIB_DIR}/,${MBEDTLS_OBJS_CRYPTO}) \
		$(addprefix ${MBEDTLS_LIB_DIR}/,${MBEDTLS_OBJS_X509}) \
		$(addprefix ${MBEDTLS_LIB_DIR}/,${MBEDTLS_OBJS_TLS})

CPPFLAGS += -I$(MBEDTLS_PRJ_DIR)/include

# Discard warnings from Mbedtls library
$(ODIR)/${MBEDTLS_LIB_DIR}/%.o: ${MBEDTLS_LIB_DIR}/%.c $(MAKEFILE_LIST)
	@test -d "$(@D)" || mkdir -p "$(@D)"
ifneq ($(PIKEOS_COMPILATION_DEPENDENCY),false)
	@test -d "$(DEPDIR)/$(*D)" || mkdir -p "$(DEPDIR)/$(*D)"
endif
ifneq ($(ARTIFACT_FLAGS_C),)
	$(CC) $(ARTIFACT_FLAGS_C) -w -o $@ $<
else
	$(call run_cmd,CC $@,$(CC) $(CPPFLAGS) $(CFLAGS) -w $(DEP_FLAGS) -o $@ -c $<)
endif

# END of MbedTLS part
