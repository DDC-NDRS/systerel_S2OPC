/*
 * Licensed to Systerel under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Systerel licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

IMPLEMENTATION
    monitored_item_event_filter_select_it_i

REFINES
    monitored_item_event_filter_select_it

SEES
    constants

CONCRETE_VARIABLES

    currentEventFilterSelectClauseIdx_i,
    nb_eventFilterSelectClauses_i

INVARIANT
    currentEventFilterSelectClauseIdx_i : NAT &
    nb_eventFilterSelectClauses_i : NAT &

    nb_eventFilterSelectClauses = nb_eventFilterSelectClauses_i &
    currentEventFilterSelectClauseIdx_i : 0..nb_eventFilterSelectClauses_i &

    (nb_eventFilterSelectClauses_i = 0 =>
        eventFilterSelectClauseIdx_to_iterate = {} &
        eventFilterSelectClauseIdx_iterated = {}) &

    (nb_eventFilterSelectClauses_i /= 0 =>
        eventFilterSelectClauseIdx_to_iterate = currentEventFilterSelectClauseIdx_i+1..nb_eventFilterSelectClauses_i &
        eventFilterSelectClauseIdx_iterated = 1..currentEventFilterSelectClauseIdx_i)

INITIALISATION
    currentEventFilterSelectClauseIdx_i := 0;
    nb_eventFilterSelectClauses_i := 0

OPERATIONS


    p_continue <-- init_iter_eventFilterSelectClause(p_nb_eventFilterSelectClauses) =
    BEGIN
        nb_eventFilterSelectClauses_i := p_nb_eventFilterSelectClauses;
        currentEventFilterSelectClauseIdx_i := 0;
        p_continue := bool (0 < p_nb_eventFilterSelectClauses)
    END
    ;

    p_continue, p_eventFilterSelectClauseIdx <-- continue_iter_eventFilterSelectClauseIdx =
    BEGIN
        currentEventFilterSelectClauseIdx_i := currentEventFilterSelectClauseIdx_i + 1;
        p_eventFilterSelectClauseIdx := currentEventFilterSelectClauseIdx_i;
        p_continue := bool (currentEventFilterSelectClauseIdx_i < nb_eventFilterSelectClauses_i)
    END

END
