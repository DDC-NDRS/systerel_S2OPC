/*
 * Licensed to Systerel under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Systerel licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

IMPLEMENTATION
    session_role_identities_it_i

REFINES
    session_role_identities_it

SEES
    constants

CONCRETE_VARIABLES
    currentIdentityIdx_i,
    nb_identities_i

INVARIANT
    currentIdentityIdx_i : NAT &
    nb_identities_i : NAT &

    nb_identities = nb_identities_i &
    currentIdentityIdx_i : 0..nb_identities_i &

    (nb_identities_i = 0 =>
        identityIdx_to_iterate = {} &
        identityIdx_iterated = {}) &

    (nb_identities_i /= 0 =>
        identityIdx_to_iterate = currentIdentityIdx_i+1..nb_identities_i &
        identityIdx_iterated = 1..currentIdentityIdx_i)

INITIALISATION
    currentIdentityIdx_i := 0;
    nb_identities_i := 0

OPERATIONS

    p_continue <-- init_iter_identities(p_nb_identities) =
    BEGIN
        nb_identities_i := p_nb_identities;
        currentIdentityIdx_i := 0;
        p_continue := bool (0 < p_nb_identities)
    END
    ;

    p_continue, p_identityIdx <-- continue_iter_identities =
    BEGIN
        currentIdentityIdx_i := currentIdentityIdx_i + 1;
        p_identityIdx := currentIdentityIdx_i;
        p_continue := bool (currentIdentityIdx_i < nb_identities_i)
    END

END

