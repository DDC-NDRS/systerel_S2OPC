/*
 * Licensed to Systerel under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Systerel licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

IMPLEMENTATION
   monitored_item_filter_treatment_i

REFINES
   monitored_item_filter_treatment

SEES
   constants,
   constants_statuscodes_bs,
   address_space_itf

IMPORTS
    monitored_item_event_filter_treatment,
    monitored_item_data_filter_treatment_bs

PROMOTES
    server_subscription_get_notification_on_event,
    delete_event_filter_context

OPERATIONS

    statusCode, filterCtx, filterResult, isEvent <-- check_monitored_item_filter_valid_and_fill_result (p_endpoint_idx, p_nid, p_aid, p_filter, p_value) =
    VAR
        l_bres_presentNode,
        l_node
    IN
        filterCtx := c_monitoringFilterCtx_indet;
        filterResult := c_filterResult_indet;
        isEvent := FALSE;
        IF p_filter /= c_monitoringFilter_indet
        THEN
            l_bres_presentNode, l_node <-- readall_AddressSpace_Node (p_nid);
            IF l_bres_presentNode = TRUE
            THEN
                IF p_aid /= e_aid_EventNotifier
                THEN
                    /* Check filter validity regarding node DataType (absolute) / Variable AnalogItem type EU range (percent) */
                    statusCode, filterCtx <-- check_monitored_item_data_filter_valid (l_node, p_filter)
                ELSE
                    /* Check filter validity regarding where clause and select clauses */
                    statusCode, filterCtx, filterResult <-- check_monitored_item_event_filter_valid (p_endpoint_idx, p_aid, p_filter, p_value);
                    isEvent := TRUE
                END
            ELSE
                /* Node not present for now, impossible to check filter validity */
                statusCode := e_sc_bad_filter_not_allowed
            END
        ELSIF p_aid = e_aid_EventNotifier
        THEN
            statusCode := e_sc_bad_monitored_item_filter_invalid
        ELSE
            statusCode := e_sc_ok
        END
    END

END
