/*
 * Licensed to Systerel under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Systerel licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

IMPLEMENTATION
    session_role_identity_eval_i

REFINES
    session_role_identity_eval_r

SEES
    constants

IMPORTS
    user_bs,
    session_role_identity_bs

OPERATIONS
    p_bres <-- user_and_identity_match(p_user, p_identity) =
    VAR
        l_criteria_type,
        l_username,
        l_is_anonymous,
        l_b_is_user_username
    IN
        p_bres := FALSE;
        l_criteria_type <-- read_identity_criteriaType(p_identity);
        IF l_criteria_type = e_CriteriaType_anonymous THEN
            // Grant role
            p_bres := TRUE
        ELSE
            l_is_anonymous <-- is_anonymous(p_user);
            IF l_is_anonymous = FALSE THEN
                IF l_criteria_type = e_CriteriaType_username THEN
                    l_b_is_user_username <-- is_username(p_user);
                    IF l_b_is_user_username = TRUE THEN
                        l_username <-- read_identity_criteria(p_identity);
                        p_bres <-- are_username_equal(p_user, l_username)
                    END
                ELSIF l_criteria_type = e_CriteriaType_authenticatedUser THEN
                    p_bres := TRUE
                END
            END
        END
    END
END
