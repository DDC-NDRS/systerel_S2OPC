/*
 * Licensed to Systerel under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Systerel licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

#ifndef SOPC_S2OPC_Types_H_
#define SOPC_S2OPC_Types_H_ 1

#include "custom_enum_types.h"
#include "sopc_buffer.h"
#include "sopc_builtintypes.h"
#include "sopc_encodeabletype.h"

#ifndef OPCUA_EXCLUDE_S2OPC_CustomDataType
/*============================================================================
 * The S2OPC_CustomDataType structure.
 *===========================================================================*/
extern SOPC_EncodeableType OpcUa_S2OPC_CustomDataType_EncodeableType;

typedef struct _OpcUa_S2OPC_CustomDataType
{
    SOPC_EncodeableType* encodeableType;
    /* IMPORTANT NOTE: response header IN RESPONSE MSG BODY is kept only
     *  for giving a copy of the header to application.
     */
    SOPC_Boolean fieldb;
    uint16_t fieldu;
} OpcUa_S2OPC_CustomDataType;

void OpcUa_S2OPC_CustomDataType_Initialize(void* pValue);

void OpcUa_S2OPC_CustomDataType_Clear(void* pValue);

#endif

#ifndef OPCUA_EXCLUDE_S2OPC_CustomDataType2
/*============================================================================
 * The S2OPC_CustomDataType2 structure.
 *===========================================================================*/
extern SOPC_EncodeableType OpcUa_S2OPC_CustomDataType2_EncodeableType;

typedef struct _OpcUa_S2OPC_CustomDataType2
{
    SOPC_EncodeableType* encodeableType;
    /* IMPORTANT NOTE: response header IN RESPONSE MSG BODY is kept only
     *  for giving a copy of the header to application.
     */
    SOPC_Boolean fieldb;
    OpcUa_S2OPC_CustomDataType fieldcdt;
} OpcUa_S2OPC_CustomDataType2;

void OpcUa_S2OPC_CustomDataType2_Initialize(void* pValue);

void OpcUa_S2OPC_CustomDataType2_Clear(void* pValue);

#endif

/*============================================================================
 * Indexes in the table of known encodeable types.
 *
 * The enumerated values are indexes in the sopc_S2OPC_KnownEncodeableTypes array.
 *===========================================================================*/
typedef enum SOPC_S2OPC_TypeInternalIndex
{
#ifndef OPCUA_EXCLUDE_S2OPC_CustomDataType
    SOPC_TypeInternalIndex_S2OPC_CustomDataType,
#endif
#ifndef OPCUA_EXCLUDE_S2OPC_CustomDataType2
    SOPC_TypeInternalIndex_S2OPC_CustomDataType2,
#endif
    SOPC_S2OPC_TypeInternalIndex_SIZE
} SOPC_S2OPC_TypeInternalIndex;

/*============================================================================
 * Table of known types.
 *===========================================================================*/
extern SOPC_EncodeableType** sopc_S2OPC_KnownEncodeableTypes;

#endif
/* This is the last line of an autogenerated file. */
